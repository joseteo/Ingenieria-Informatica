/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package practica7smm;

import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
//import practica7smm.Lienzo2D.Forma;
import sm.JTLV.iu.Lienzo2D;
import sm.JTLV.iu.Lienzo2D.Forma;

/**
 *
 * @author joset
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        this.setSize(1000,700);
        this.setTitle("Paint Basico");
    }
    
    /*@Override
    public void paint(Graphics g){
        super.paint(g);
        g.fillOval(this.getMousePosition().x, this.getMousePosition().y, 30, 30);
    }*/
    
    public Lienzo2D getLienzoSeleccionado() {
        VentanaInterna vi = (VentanaInterna)Escritorio.getSelectedFrame();
        return vi!=null ? vi.getLienzo() : null;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        NuevoB = new javax.swing.JToggleButton();
        AbrirB = new javax.swing.JToggleButton();
        GuardarB = new javax.swing.JToggleButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        TrazoLibre = new javax.swing.JToggleButton();
        Linea = new javax.swing.JToggleButton();
        rectangulo = new javax.swing.JToggleButton();
        Elipse = new javax.swing.JToggleButton();
        Curva = new javax.swing.JToggleButton();
        Smile = new javax.swing.JToggleButton();
        Seleccion = new javax.swing.JToggleButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        ColorNegro = new javax.swing.JButton();
        ColorRojo = new javax.swing.JButton();
        ColorAzul = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        ColorAmarillo = new javax.swing.JButton();
        ColorVerde = new javax.swing.JButton();
        MasColores = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        RellenoB = new javax.swing.JToggleButton();
        Transparencia = new javax.swing.JToggleButton();
        Alisar = new javax.swing.JToggleButton();
        GrosorTrazo = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        BarraDeEstado = new javax.swing.JLabel();
        Coordenadas = new javax.swing.JLabel();
        Escritorio = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        Archivo = new javax.swing.JMenu();
        Nuevo = new javax.swing.JMenuItem();
        Abrir = new javax.swing.JMenuItem();
        Guardar = new javax.swing.JMenuItem();
        Imagen = new javax.swing.JMenu();

        FormListener formListener = new FormListener();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(214, 217, 223));

        jToolBar1.setBackground(new java.awt.Color(214, 217, 223));
        jToolBar1.setRollover(true);

        NuevoB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/nuevo.png"))); // NOI18N
        NuevoB.setFocusable(false);
        NuevoB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        NuevoB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        NuevoB.addActionListener(formListener);
        jToolBar1.add(NuevoB);

        AbrirB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/abrir.png"))); // NOI18N
        AbrirB.setFocusable(false);
        AbrirB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        AbrirB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        AbrirB.addActionListener(formListener);
        jToolBar1.add(AbrirB);

        GuardarB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/guardar.png"))); // NOI18N
        GuardarB.setFocusable(false);
        GuardarB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        GuardarB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        GuardarB.addActionListener(formListener);
        jToolBar1.add(GuardarB);
        jToolBar1.add(jSeparator1);

        TrazoLibre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/trazo.png"))); // NOI18N
        TrazoLibre.setFocusable(false);
        TrazoLibre.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        TrazoLibre.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        TrazoLibre.addActionListener(formListener);
        jToolBar1.add(TrazoLibre);

        Linea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/linea.png"))); // NOI18N
        Linea.setFocusable(false);
        Linea.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Linea.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Linea.addActionListener(formListener);
        jToolBar1.add(Linea);

        rectangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rectangulo.png"))); // NOI18N
        rectangulo.setFocusable(false);
        rectangulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        rectangulo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        rectangulo.addActionListener(formListener);
        jToolBar1.add(rectangulo);

        Elipse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/elipse.png"))); // NOI18N
        Elipse.setFocusable(false);
        Elipse.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Elipse.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Elipse.addActionListener(formListener);
        jToolBar1.add(Elipse);

        Curva.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/curva.png"))); // NOI18N
        Curva.setFocusable(false);
        Curva.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Curva.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Curva.addActionListener(formListener);
        jToolBar1.add(Curva);

        Smile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/smile.png"))); // NOI18N
        Smile.setFocusable(false);
        Smile.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Smile.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Smile.addActionListener(formListener);
        jToolBar1.add(Smile);

        Seleccion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/seleccion.png"))); // NOI18N
        Seleccion.setFocusable(false);
        Seleccion.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Seleccion.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Seleccion.addActionListener(formListener);
        jToolBar1.add(Seleccion);
        jToolBar1.add(jSeparator2);

        jPanel4.setBackground(new java.awt.Color(214, 217, 223));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel5.setBackground(new java.awt.Color(214, 217, 223));

        ColorNegro.setBackground(new java.awt.Color(0, 0, 0));
        ColorNegro.setBorder(null);
        ColorNegro.setBorderPainted(false);
        ColorNegro.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ColorNegro.setMaximumSize(new java.awt.Dimension(18, 15));
        ColorNegro.setMinimumSize(new java.awt.Dimension(18, 15));
        ColorNegro.setPreferredSize(new java.awt.Dimension(18, 15));
        ColorNegro.addActionListener(formListener);
        jPanel5.add(ColorNegro);

        ColorRojo.setBackground(new java.awt.Color(255, 0, 0));
        ColorRojo.setBorder(null);
        ColorRojo.setMaximumSize(new java.awt.Dimension(18, 15));
        ColorRojo.setMinimumSize(new java.awt.Dimension(18, 15));
        ColorRojo.setPreferredSize(new java.awt.Dimension(18, 15));
        ColorRojo.addActionListener(formListener);
        jPanel5.add(ColorRojo);

        ColorAzul.setBackground(new java.awt.Color(0, 0, 255));
        ColorAzul.setBorder(null);
        ColorAzul.setMaximumSize(new java.awt.Dimension(18, 15));
        ColorAzul.setMinimumSize(new java.awt.Dimension(18, 15));
        ColorAzul.setName(""); // NOI18N
        ColorAzul.setPreferredSize(new java.awt.Dimension(18, 15));
        ColorAzul.addActionListener(formListener);
        jPanel5.add(ColorAzul);

        jPanel4.add(jPanel5, java.awt.BorderLayout.NORTH);

        jPanel6.setBackground(new java.awt.Color(214, 217, 223));

        ColorAmarillo.setBackground(new java.awt.Color(255, 255, 0));
        ColorAmarillo.setBorder(null);
        ColorAmarillo.setMaximumSize(new java.awt.Dimension(18, 15));
        ColorAmarillo.setMinimumSize(new java.awt.Dimension(18, 15));
        ColorAmarillo.setName(""); // NOI18N
        ColorAmarillo.setPreferredSize(new java.awt.Dimension(18, 15));
        ColorAmarillo.addActionListener(formListener);
        jPanel6.add(ColorAmarillo);

        ColorVerde.setBackground(new java.awt.Color(0, 255, 0));
        ColorVerde.setBorder(null);
        ColorVerde.setMaximumSize(new java.awt.Dimension(18, 15));
        ColorVerde.setMinimumSize(new java.awt.Dimension(18, 15));
        ColorVerde.setPreferredSize(new java.awt.Dimension(18, 15));
        ColorVerde.addActionListener(formListener);
        jPanel6.add(ColorVerde);

        MasColores.setBackground(new java.awt.Color(214, 217, 223));
        MasColores.setText("  +");
        MasColores.setAlignmentX(0.5F);
        MasColores.setBorder(null);
        MasColores.setBorderPainted(false);
        MasColores.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        MasColores.setMaximumSize(new java.awt.Dimension(18, 15));
        MasColores.setMinimumSize(new java.awt.Dimension(18, 15));
        MasColores.setPreferredSize(new java.awt.Dimension(18, 15));
        MasColores.addActionListener(formListener);
        jPanel6.add(MasColores);

        jPanel4.add(jPanel6, java.awt.BorderLayout.SOUTH);

        jToolBar1.add(jPanel4);
        jToolBar1.add(jSeparator3);

        RellenoB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rellenar.png"))); // NOI18N
        RellenoB.setFocusable(false);
        RellenoB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        RellenoB.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        RellenoB.addActionListener(formListener);
        jToolBar1.add(RellenoB);

        Transparencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/transparencia.png"))); // NOI18N
        Transparencia.setFocusable(false);
        Transparencia.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Transparencia.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Transparencia.addActionListener(formListener);
        jToolBar1.add(Transparencia);

        Alisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/alisar.png"))); // NOI18N
        Alisar.setFocusable(false);
        Alisar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Alisar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Alisar.addActionListener(formListener);
        jToolBar1.add(Alisar);

        GrosorTrazo.addChangeListener(formListener);
        jToolBar1.add(GrosorTrazo);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jPanel1.setBackground(new java.awt.Color(214, 217, 223));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(214, 217, 223));
        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jPanel3.setLayout(new java.awt.BorderLayout());

        BarraDeEstado.setBackground(new java.awt.Color(214, 214, 214));
        BarraDeEstado.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BarraDeEstado.setText("Barra de estado");
        BarraDeEstado.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jPanel3.add(BarraDeEstado, java.awt.BorderLayout.CENTER);

        Coordenadas.setText("Coordenadas");
        jPanel3.add(Coordenadas, java.awt.BorderLayout.LINE_END);

        jPanel1.add(jPanel3, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        Escritorio.addMouseMotionListener(formListener);

        javax.swing.GroupLayout EscritorioLayout = new javax.swing.GroupLayout(Escritorio);
        Escritorio.setLayout(EscritorioLayout);
        EscritorioLayout.setHorizontalGroup(
            EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 686, Short.MAX_VALUE)
        );
        EscritorioLayout.setVerticalGroup(
            EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 341, Short.MAX_VALUE)
        );

        getContentPane().add(Escritorio, java.awt.BorderLayout.CENTER);

        jMenuBar1.setBackground(new java.awt.Color(214, 217, 223));

        Archivo.setText("Archivo");

        Nuevo.setText("Nuevo");
        Nuevo.addActionListener(formListener);
        Archivo.add(Nuevo);

        Abrir.setText("Abrir");
        Abrir.addActionListener(formListener);
        Archivo.add(Abrir);

        Guardar.setText("Guardar");
        Guardar.addActionListener(formListener);
        Archivo.add(Guardar);

        jMenuBar1.add(Archivo);

        Imagen.setText("Imagen");
        jMenuBar1.add(Imagen);

        setJMenuBar(jMenuBar1);

        pack();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.MouseMotionListener, javax.swing.event.ChangeListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == TrazoLibre) {
                VentanaPrincipal.this.TrazoLibreActionPerformed(evt);
            }
            else if (evt.getSource() == Linea) {
                VentanaPrincipal.this.LineaActionPerformed(evt);
            }
            else if (evt.getSource() == rectangulo) {
                VentanaPrincipal.this.rectanguloActionPerformed(evt);
            }
            else if (evt.getSource() == Elipse) {
                VentanaPrincipal.this.ElipseActionPerformed(evt);
            }
            else if (evt.getSource() == Curva) {
                VentanaPrincipal.this.CurvaActionPerformed(evt);
            }
            else if (evt.getSource() == Smile) {
                VentanaPrincipal.this.SmileActionPerformed(evt);
            }
            else if (evt.getSource() == Seleccion) {
                VentanaPrincipal.this.SeleccionActionPerformed(evt);
            }
            else if (evt.getSource() == ColorNegro) {
                VentanaPrincipal.this.ColorNegroActionPerformed(evt);
            }
            else if (evt.getSource() == ColorRojo) {
                VentanaPrincipal.this.ColorRojoActionPerformed(evt);
            }
            else if (evt.getSource() == ColorAzul) {
                VentanaPrincipal.this.ColorAzulActionPerformed(evt);
            }
            else if (evt.getSource() == ColorAmarillo) {
                VentanaPrincipal.this.ColorAmarilloActionPerformed(evt);
            }
            else if (evt.getSource() == ColorVerde) {
                VentanaPrincipal.this.ColorVerdeActionPerformed(evt);
            }
            else if (evt.getSource() == MasColores) {
                VentanaPrincipal.this.MasColoresActionPerformed(evt);
            }
            else if (evt.getSource() == RellenoB) {
                VentanaPrincipal.this.RellenoBActionPerformed(evt);
            }
            else if (evt.getSource() == Transparencia) {
                VentanaPrincipal.this.TransparenciaActionPerformed(evt);
            }
            else if (evt.getSource() == Alisar) {
                VentanaPrincipal.this.AlisarActionPerformed(evt);
            }
            else if (evt.getSource() == Nuevo) {
                VentanaPrincipal.this.NuevoActionPerformed(evt);
            }
            else if (evt.getSource() == Abrir) {
                VentanaPrincipal.this.AbrirActionPerformed(evt);
            }
            else if (evt.getSource() == Guardar) {
                VentanaPrincipal.this.GuardarActionPerformed(evt);
            }
            else if (evt.getSource() == NuevoB) {
                VentanaPrincipal.this.NuevoBActionPerformed(evt);
            }
            else if (evt.getSource() == AbrirB) {
                VentanaPrincipal.this.AbrirBActionPerformed(evt);
            }
            else if (evt.getSource() == GuardarB) {
                VentanaPrincipal.this.GuardarBActionPerformed(evt);
            }
        }

        public void mouseDragged(java.awt.event.MouseEvent evt) {
        }

        public void mouseMoved(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == Escritorio) {
                VentanaPrincipal.this.EscritorioMouseMoved(evt);
            }
        }

        public void stateChanged(javax.swing.event.ChangeEvent evt) {
            if (evt.getSource() == GrosorTrazo) {
                VentanaPrincipal.this.GrosorTrazoStateChanged(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void LineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LineaActionPerformed
        if(this.getLienzoSeleccionado() != null)
            this.getLienzoSeleccionado().setForma(Forma.LINEA);
        BarraDeEstado.setText("Linea");
        rectangulo.setSelected(false);
        Elipse.setSelected(false);
        Curva.setSelected(false);
        TrazoLibre.setSelected(false);
        Smile.setSelected(false);
    }//GEN-LAST:event_LineaActionPerformed

    private void NuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NuevoActionPerformed
        VentanaInterna vi = new VentanaInterna();
        Escritorio.add(vi);
        vi.setVisible(true);
        BufferedImage img;
        img = new BufferedImage(300,300,BufferedImage.TYPE_INT_RGB);
        int[] color = new int[img.getHeight()*img.getWidth()];
        for(int i=0; i < color.length; i++)
            color[i] = 0xFFFFFF;

        img.setRGB(0, 0, img.getWidth(), img.getHeight(), color, 0, img.getWidth());
        vi.getLienzo().setImage(img);
    }//GEN-LAST:event_NuevoActionPerformed

    private void ColorNegroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColorNegroActionPerformed
        if(this.getLienzoSeleccionado() != null)
            this.getLienzoSeleccionado().setColor(Color.black);
    }//GEN-LAST:event_ColorNegroActionPerformed

    private void ColorRojoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColorRojoActionPerformed
        if(this.getLienzoSeleccionado() != null)
            this.getLienzoSeleccionado().setColor(Color.red);
    }//GEN-LAST:event_ColorRojoActionPerformed

    private void ColorAzulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColorAzulActionPerformed
        if(this.getLienzoSeleccionado() != null)
            this.getLienzoSeleccionado().setColor(Color.blue);
    }//GEN-LAST:event_ColorAzulActionPerformed

    private void MasColoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MasColoresActionPerformed
        if(this.getLienzoSeleccionado() != null){
            Color color = JColorChooser.showDialog(this, "Elije un color", Color.RED);
            this.getLienzoSeleccionado().setColor(color);
        }
    }//GEN-LAST:event_MasColoresActionPerformed

    private void ColorAmarilloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColorAmarilloActionPerformed
        if(this.getLienzoSeleccionado() != null)
            this.getLienzoSeleccionado().setColor(Color.yellow);
    }//GEN-LAST:event_ColorAmarilloActionPerformed

    private void ColorVerdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColorVerdeActionPerformed
        if(this.getLienzoSeleccionado() != null)
            this.getLienzoSeleccionado().setColor(Color.green);
    }//GEN-LAST:event_ColorVerdeActionPerformed

    private void rectanguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rectanguloActionPerformed
        if(this.getLienzoSeleccionado() != null)
            this.getLienzoSeleccionado().setForma(Forma.RECTANGULO);
        BarraDeEstado.setText("Rectangulo");
        Linea.setSelected(false);
        Elipse.setSelected(false);
        Curva.setSelected(false);
        TrazoLibre.setSelected(false);
        Smile.setSelected(false);
    }//GEN-LAST:event_rectanguloActionPerformed

    private void ElipseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ElipseActionPerformed
        if(this.getLienzoSeleccionado() != null)
            this.getLienzoSeleccionado().setForma(Forma.ELIPSE);
        BarraDeEstado.setText("Elipse");
        rectangulo.setSelected(false);
        Linea.setSelected(false);
        Curva.setSelected(false);
        TrazoLibre.setSelected(false);
        Smile.setSelected(false);
    }//GEN-LAST:event_ElipseActionPerformed

    private void AbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirActionPerformed
        JFileChooser dlg = new JFileChooser();
        int resp = dlg.showOpenDialog(this);
        if (resp == JFileChooser.APPROVE_OPTION) {
            try{
                File f = dlg.getSelectedFile();
                BufferedImage img = ImageIO.read(f);
                VentanaInterna vi = new VentanaInterna();
                vi.getLienzo().setImage(img);
                this.Escritorio.add(vi);
                vi.setTitle(f.getName());
                vi.setVisible(true);
            }catch(Exception ex){
                System.err.println("Error al leer la imagen");
            }
        }
    }//GEN-LAST:event_AbrirActionPerformed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        VentanaInterna vi = (VentanaInterna)Escritorio.getSelectedFrame();
        if (vi != null) {
            BufferedImage img = vi.getLienzo().getImage(true);
            if (img != null) {
                JFileChooser dlg = new JFileChooser();
                int resp = dlg.showSaveDialog(this);
                if (resp == JFileChooser.APPROVE_OPTION) {
                    try {
                        File f = dlg.getSelectedFile();
                        ImageIO.write(img, "jpg", f);
                        vi.setTitle(f.getName());
                    } catch (Exception ex) {
                        System.err.println("Error al guardar la imagen");
                    }
                }
            }
        }
    }//GEN-LAST:event_GuardarActionPerformed

    private void CurvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CurvaActionPerformed
        if(this.getLienzoSeleccionado() != null)
            this.getLienzoSeleccionado().setForma(Forma.QUADRATICCURVE);
        BarraDeEstado.setText("Curva");
        Linea.setSelected(false);
        Elipse.setSelected(false);
        rectangulo.setSelected(false);
        TrazoLibre.setSelected(false);
        Smile.setSelected(false);
    }//GEN-LAST:event_CurvaActionPerformed

    private void TrazoLibreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TrazoLibreActionPerformed
        if(this.getLienzoSeleccionado() != null)
            this.getLienzoSeleccionado().setForma(Forma.TRAZOLIBRE);
        BarraDeEstado.setText("TrazoLibre");
        Linea.setSelected(false);
        Elipse.setSelected(false);
        rectangulo.setSelected(false);
        Curva.setSelected(false);
        Smile.setSelected(false);
    }//GEN-LAST:event_TrazoLibreActionPerformed

    private void RellenoBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RellenoBActionPerformed
        if(this.getLienzoSeleccionado() != null)
            this.getLienzoSeleccionado().setRelleno(RellenoB.isSelected());
    }//GEN-LAST:event_RellenoBActionPerformed

    private void SmileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SmileActionPerformed
        if(this.getLienzoSeleccionado() != null)
            this.getLienzoSeleccionado().setForma(Forma.SMILE);
        BarraDeEstado.setText("Smile");
        Linea.setSelected(false);
        Elipse.setSelected(false);
        rectangulo.setSelected(false);
        Curva.setSelected(false);
        TrazoLibre.setSelected(false);
    }//GEN-LAST:event_SmileActionPerformed

    private void SeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeleccionActionPerformed
        if(this.getLienzoSeleccionado() != null)
            this.getLienzoSeleccionado().setMover(Seleccion.isSelected());
        BarraDeEstado.setText("Mover Figuras");
    }//GEN-LAST:event_SeleccionActionPerformed

    private void GrosorTrazoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_GrosorTrazoStateChanged
        if(this.getLienzoSeleccionado() != null){
            Stroke grosor = new BasicStroke((int)GrosorTrazo.getValue());
            this.getLienzoSeleccionado().setGrosor(grosor);
        }
    }//GEN-LAST:event_GrosorTrazoStateChanged

    private void TransparenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransparenciaActionPerformed
        if(this.getLienzoSeleccionado() != null)
            this.getLienzoSeleccionado().setTransparente(Transparencia.isSelected());
    }//GEN-LAST:event_TransparenciaActionPerformed

    private void AlisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlisarActionPerformed
        if(this.getLienzoSeleccionado() != null)
            this.getLienzoSeleccionado().setAlisar(Alisar.isSelected());
    }//GEN-LAST:event_AlisarActionPerformed

    private void EscritorioMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EscritorioMouseMoved
        /*if(this.Escritorio.getSelectedFrame() != null)
            Coordenadas.setText(  ((VentanaInterna)Escritorio.getSelectedFrame()).getCoordenadas()  );*/
    }//GEN-LAST:event_EscritorioMouseMoved

    private void NuevoBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NuevoBActionPerformed
        NuevoActionPerformed(evt);
        NuevoB.setSelected(false);
    }//GEN-LAST:event_NuevoBActionPerformed

    private void AbrirBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirBActionPerformed
        AbrirActionPerformed(evt);
        AbrirB.setSelected(false);
    }//GEN-LAST:event_AbrirBActionPerformed

    private void GuardarBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarBActionPerformed
        GuardarActionPerformed(evt);
        GuardarB.setSelected(false);
    }//GEN-LAST:event_GuardarBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Abrir;
    private javax.swing.JToggleButton AbrirB;
    private javax.swing.JToggleButton Alisar;
    private javax.swing.JMenu Archivo;
    private javax.swing.JLabel BarraDeEstado;
    private javax.swing.JButton ColorAmarillo;
    private javax.swing.JButton ColorAzul;
    private javax.swing.JButton ColorNegro;
    private javax.swing.JButton ColorRojo;
    private javax.swing.JButton ColorVerde;
    private javax.swing.JLabel Coordenadas;
    private javax.swing.JToggleButton Curva;
    private javax.swing.JToggleButton Elipse;
    private javax.swing.JDesktopPane Escritorio;
    private javax.swing.JSpinner GrosorTrazo;
    private javax.swing.JMenuItem Guardar;
    private javax.swing.JToggleButton GuardarB;
    private javax.swing.JMenu Imagen;
    private javax.swing.JToggleButton Linea;
    private javax.swing.JButton MasColores;
    private javax.swing.JMenuItem Nuevo;
    private javax.swing.JToggleButton NuevoB;
    private javax.swing.JToggleButton RellenoB;
    private javax.swing.JToggleButton Seleccion;
    private javax.swing.JToggleButton Smile;
    private javax.swing.JToggleButton Transparencia;
    private javax.swing.JToggleButton TrazoLibre;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToggleButton rectangulo;
    // End of variables declaration//GEN-END:variables


}
